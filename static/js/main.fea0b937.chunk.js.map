{"version":3,"sources":["Components/Search.js","Components/Header.js","Components/Datatable.js","Components/Pagination.js","Components/Footer.js","App.js","index.js"],"names":["Search","_ref","items","searchPhones","columnConfig","react_default","a","createElement","className","htmlFor","id","type","onChange","event","value","target","toLowerCase","searchColumn","Object","keys","filter","column","isSearchable","result","item","map","join","includes","autoComplete","Header","showItems","handleShowItems","name","n","key","vlalue","defaultValue","Components_Search","Datatable","sortPhones","tabs","start","perPage","page","end","length","index","title","onClick","sort","b","localeCompare","reverse","splice","apply","concat","toConsumableArray","handleSort","Pagination","total","onPageChange","buttons","Math","ceil","changePage","newPage","textContent","Array","fill","button","cn","selectButton","Footer","handleTabs","Components_Pagination","App","phonesFromServer","state","phones","_this","sortType","age","snippet","handleUpdatePhones","setState","_this2","this","self","axios","get","then","data","catch","console","log","_this$state","Components_Header","Components_Datatable","onSelectionChanged","selectedItems","Components_Footer","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.fea0b937.chunk.js","sourcesContent":["import React from 'react';\nimport PropsTypes from 'prop-types';\n\nconst Search = ({ items, searchPhones, columnConfig }) => {\n  const searchItems = (event) => {\n    const value = event.target.value.toLowerCase();\n\n    const searchColumn = Object.keys(columnConfig).filter(column => (\n      columnConfig[column].isSearchable\n    ));\n\n    const result = items.filter((item) => {\n      const searchArr = searchColumn.map(column => (\n        item[column]\n      ));\n\n      return searchArr.join('').toLowerCase().includes(value);\n    });\n\n    searchPhones(result);\n  };\n\n  return (\n    <div className=\"header__search\">\n      <label htmlFor=\"search\">\n        Search:\n        <input\n          id=\"search\"\n          type=\"search\"\n          onChange={searchItems}\n          autoComplete=\"off\"\n          className=\"header__input\"\n        />\n      </label>\n    </div>\n  );\n};\n\nSearch.propTypes = {\n  items: PropsTypes.arrayOf.isRequired,\n  searchPhones: PropsTypes.func.isRequired,\n  columnConfig: PropsTypes.objectOf.isRequired,\n};\n\nexport default Search;\n","import React from 'react';\nimport PropsTypes from 'prop-types';\nimport Search from './Search';\n\nconst Header = ({ items,\n  showItems,\n  handleShowItems,\n  searchPhones,\n  columnConfig }) => {\n  const entries = [5, 10, 15, 20];\n\n  return (\n    <header className=\"table__header\">\n      <div>\n        Show\n        <select\n          name=\"entries\"\n          onChange={event => handleShowItems(event.target.value)}\n          className=\"header__select\"\n        >\n          {entries.map(n => (\n            <option\n              key={n}\n              vlalue={n}\n              defaultValue={n === showItems}\n            >\n              {n}\n            </option>\n          ))}\n        </select>\n        entries\n      </div>\n      <Search\n        items={items}\n        searchPhones={searchPhones}\n        columnConfig={columnConfig}\n      />\n    </header>\n  );\n};\n\nHeader.propTypes = {\n  items: PropsTypes.arrayOf.isRequired,\n  showItems: PropsTypes.number.isRequired,\n  handleShowItems: PropsTypes.func.isRequired,\n  searchPhones: PropsTypes.func.isRequired,\n  columnConfig: PropsTypes.objectOf.isRequired,\n};\n\nexport default Header;\n","import React from 'react';\nimport PropsTypes from 'prop-types';\n\nconst Datatable = ({ items, columnConfig, sortPhones, tabs }) => {\n  const start = tabs.perPage * tabs.page - (tabs.perPage - 1);\n  const end = tabs.perPage * tabs.page >= items.length\n    ? items.length\n    : tabs.perPage * tabs.page;\n\n  const showItems = items.filter((item, index) => (\n    index + 1 >= start && index + 1 <= end\n  ));\n\n  const handleSort = (column) => {\n    showItems.sort((a, b) => {\n      switch (typeof a[column]) {\n        case 'string':\n          return a[column].localeCompare(b[column]);\n        case 'number':\n          return a[column] - b[column];\n        default:\n          return 0;\n      }\n    });\n\n    if (showItems[0].id === items[start - 1].id) {\n      showItems.reverse();\n    }\n\n    items.splice(start - 1, showItems.length, ...showItems);\n    sortPhones(items);\n  };\n\n  return (\n    <table className=\"data-table\">\n      <thead>\n        <tr>\n          {Object.keys(columnConfig).map(column => (\n            <th\n              key={columnConfig[column].title}\n              onClick={() => handleSort(column)}\n            >\n              {columnConfig[column].title}\n            </th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {showItems.map(item => (\n          <tr key={item.id}>\n            {Object.keys(columnConfig).map(column => (\n              <td key={item[column]}>\n                {item[column]}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nDatatable.propTypes = {\n  items: PropsTypes.arrayOf.isRequired,\n  columnConfig: PropsTypes.objectOf.isRequired,\n  sortPhones: PropsTypes.func.isRequired,\n  tabs: PropsTypes.objectOf.isRequired,\n};\n\nexport default Datatable;\n","import React from 'react';\nimport cn from 'classnames';\nimport PropsTypes from 'prop-types';\n\nconst Pagination = ({ total, page, perPage, onPageChange }) => {\n  const buttons = Math.ceil(total / perPage);\n\n  const changePage = (event) => {\n    const newPage = event.target.textContent;\n\n    switch (newPage) {\n      case 'Next':\n        onPageChange(page + 1 > buttons ? buttons : page + 1);\n        break;\n      case 'Prev':\n        onPageChange(page - 1 < 1 ? 1 : page - 1);\n        break;\n      default:\n        onPageChange(+newPage);\n    }\n  };\n\n  return (\n    <div className=\"table__pagination\">\n      <button\n        className=\"pagination__button\"\n        type=\"button\"\n        onClick={changePage}\n      >\n        Prev\n      </button>\n      {Array(buttons).fill('').map((button, index) => (\n        <button\n          type=\"button\"\n          className={`pagination__button\n          ${cn({\n          selectButton: index + 1 === page,\n        })}`}\n          onClick={changePage}\n        >\n          {index + 1}\n        </button>\n      ))}\n      <button\n        type=\"button\"\n        onClick={changePage}\n        className=\"pagination__button\"\n      >\n        Next\n      </button>\n    </div>\n  );\n};\n\nPagination.propTypes = {\n  total: PropsTypes.number.isRequired,\n  page: PropsTypes.number.isRequired,\n  perPage: PropsTypes.number.isRequired,\n  onPageChange: PropsTypes.func.isRequired,\n};\n\nexport default Pagination;\n","import React from 'react';\nimport PropsTypes from 'prop-types';\nimport Pagination from './Pagination';\n\nconst Footer = ({ items, tabs, handleTabs }) => {\n  const start = tabs.perPage * tabs.page - (tabs.perPage - 1);\n  const end = tabs.perPage * tabs.page >= items.length\n    ? items.length\n    : tabs.perPage * tabs.page;\n\n  return (\n    <footer className=\"table__footer\">\n      <p className=\"footer__info\">\n        {`\n          Showing ${start} to ${end}\n          of ${items.length} entries\n        `}\n      </p>\n      <Pagination\n        total={items.length}\n        page={tabs.page}\n        perPage={tabs.perPage}\n        onPageChange={handleTabs}\n      />\n    </footer>\n  );\n};\n\nFooter.propTypes = {\n  items: PropsTypes.arrayOf.isRequired,\n  tabs: PropsTypes.objectOf.isRequired,\n  handleTabs: PropsTypes.func.isRequired,\n};\n\nexport default Footer;\n","import React from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Header from './Components/Header';\nimport Datatable from './Components/Datatable';\nimport Footer from './Components/Footer';\n\nclass App extends React.Component {\n  phonesFromServer = [];\n\n  state = {\n    phones: [...this.phonesFromServer],\n    tabs: {\n      page: 1,\n      perPage: 5,\n    },\n  }\n\n  columnConfig = {\n    name: {\n      title: 'Название',\n      sortType: 'string',\n      isSearchable: true,\n    },\n    age: {\n      title: 'Возраст',\n      sortType: 'number',\n    },\n    snippet: {\n      title: 'Описание',\n      isSearchable: true,\n    },\n  };\n\n  handleUpdatePhones = phones => (\n    this.setState({ phones })\n  )\n\n  handleShowItems = n => (\n    this.setState(state => ({\n      tabs: {\n        page: state.tabs.page,\n        perPage: n,\n      },\n    }))\n  )\n\n  handleTabs = page => (\n    this.setState(state => ({\n      tabs: {\n        page,\n        perPage: state.tabs.perPage,\n      },\n    }))\n  )\n\n  UNSAFE_componentWillMount() {\n    const self = this;\n\n    axios.get(\n      'https://mate-academy.github.io/phone-catalogue-static/api/phones.json'\n    )\n      .then((result) => {\n        this.phonesFromServer = result.data;\n        self.setState({ phones: result.data });\n      })\n      .catch(() => {\n        console.log('failed to get data');\n      });\n  }\n\n  render() {\n    const { phones, tabs } = this.state;\n\n    return (\n      <section className=\"app__table\">\n        <Header\n          items={this.phonesFromServer}\n          showItems={tabs.perPage}\n          handleShowItems={this.handleShowItems}\n          searchPhones={this.handleUpdatePhones}\n          columnConfig={this.columnConfig}\n        />\n        <Datatable\n          items={phones}\n          tabs={tabs}\n          columnConfig={this.columnConfig}\n          onSelectionChanged={(selectedItems) => {}}\n          sortPhones={this.handleUpdatePhones}\n        />\n        <Footer\n          items={phones}\n          tabs={tabs}\n          handleTabs={this.handleTabs}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}